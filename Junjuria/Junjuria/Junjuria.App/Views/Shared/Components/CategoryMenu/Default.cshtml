@model IEnumerable<Junjuria.App.ViewComponents.DTO.CategoryOutDto>
@{
    Layout = "";
}

<div class="dropdown dropright  mt-1" id="CatMenu">
    <button class="list-group-item list-group-item-action navbar-brand font-weight-bold pl-0  bg-jun dropdown-toggle btn btn-link text-jun font-weight-bold text-decoration-none" id="dropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Categories
    </button>

    <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
        @foreach (var dto in Model.Where(x => x.OuterCategoryId is null))
{
            @Html.Raw(GenerateMenuItem(dto));
}
    </ul>
</div>

@functions{
    public string GenerateMenuItem(Junjuria.App.ViewComponents.DTO.CategoryOutDto dto)
    {
        string totalProducts = string.Empty;
        if (dto.ProductsCount + dto.SubProductsCount > 0)
        {
            totalProducts = $"<span class=\"badge text-light bg-dark rounded-circle\" >{dto.ProductsCount + dto.SubProductsCount}</span>";
        }

        if (!Model.Any(x => x.OuterCategoryId == dto.Id))
        {
            return $"<li class=\"dropdown-item list-group-item h5 font-weight-bold bg-jun  pl-2 text-left\"><a class=\"text-decoration-none text-info\" href=\"\\Products\\ProductsByCategory\\{dto.Id}\">{dto.Title} {totalProducts}</a></li>";
        }
        string result = "";

        string prefix = " <li class=\"dropdown-submenu\" >";

        result += prefix + $"<a class=\"dropdown-item pl-2 list-group-item h5 font-weight-bold bg-jun text-left\" href=\"\\Products\\ProductsByCategory\\{dto.Id}\">{dto.Title} {totalProducts}</a>" + "<ul class=\"dropdown-menu\">";
        string sufix = "</ul> </li>";

        foreach (var sub in Model.Where(x => x.OuterCategoryId == dto.Id))
        {
            result += GenerateMenuItem(sub);
        }
        return result + sufix;
    } 
    }